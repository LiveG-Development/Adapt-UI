{"appLayoutFunctions.dialogs.register": {"shortDescription": "Register any menu for events and accessibility which is an instance of `ui.models.appLayout.Menu`.", "params": [{"description": "DOM object of menu to register. Default: `dom.element(\"div[menu]\")`.", "name": "domObject", "type": "object"}], "return": {}, "longDescription": ""}, "ui.models.appLayout.Component": {"shortDescription": "Component class, extends `ui.components.Component`.", "params": [{"description": "Children or content to include in component. Default: `[]`.", "name": "children", "type": "any"}, {"description": "Styling to use on component. Default: `{}`.", "name": "style", "type": "object"}, {"description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes", "type": "object"}, {"description": "Events to listen to on component. Default: `{}`.", "name": "events", "type": "object"}], "return": {}, "longDescription": ""}, "ui.models.appLayout.MenuBar": {"shortDescription": "MenuBar class, extends `ui.models.appLayout.Component`.", "params": [{"description": "Children or content to include in component. Default: `[]`.", "name": "children", "type": "any"}, {"description": "Styling to use on component. Default: `{}`.", "name": "style", "type": "object"}, {"description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes", "type": "object"}, {"description": "Events to listen to on component. Default: `{}`.", "name": "events", "type": "object"}], "return": {}, "longDescription": "Has similar properties to an HTML `div` element with attribute `menubar`."}, "appLayoutFunctions.dialogs.open": {"shortDescription": "Open any menu which is an instance of `ui.models.appLayout.Menu`.", "params": [{"description": "DOM object of menu to open. Default: `dom.element(\"div[menu]\")`.", "name": "domObject", "type": "object"}], "return": {}, "longDescription": ""}, "ui.models.appLayout.MenuText": {"shortDescription": "MenuText class, extends `ui.models.appLayout.Component`.", "params": [{"description": "Children or content to include in component. Default: `[]`.", "name": "children", "type": "any"}, {"description": "Styling to use on component. Default: `{}`.", "name": "style", "type": "object"}, {"description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes", "type": "object"}, {"description": "Events to listen to on component. Default: `{}`.", "name": "events", "type": "object"}], "return": {}, "longDescription": "Has similar properties to an HTML `div` element with attribute `menutext`."}, "ui.models.appLayout.MenuBarButton": {"shortDescription": "MenuBarButton class, extends `ui.models.appLayout.Component`.", "params": [{"description": "Children or content to include in component. Default: `[]`.", "name": "children", "type": "any"}, {"description": "Styling to use on component. Default: `{}`.", "name": "style", "type": "object"}, {"description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes", "type": "object"}, {"description": "Events to listen to on component. Default: `{}`.", "name": "events", "type": "object"}], "return": {}, "longDescription": "Has similar properties to an HTML `button` element with attribute `menubarbutton`.\nIt is recommended to only have an icon representing the button."}, "ui.models.appLayout.Menu": {"shortDescription": "Menu class, extends `ui.models.appLayout.Component`.", "params": [{"description": "Children or content to include in component. Default: `[]`.", "name": "children", "type": "any"}, {"description": "Styling to use on component. Default: `{}`.", "name": "style", "type": "object"}, {"description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes", "type": "object"}, {"description": "Events to listen to on component. Default: `{}`.", "name": "events", "type": "object"}], "return": {}, "longDescription": "Has similar properties to an HTML `div` element with attribute `menu`.\nShould have children `ui.models.appLayout.MenuTitle` and `ui.models.appLayout.MenuContent`."}, "ui.models.appLayout.MenuContent": {"shortDescription": "MenuContent class, extends `ui.models.appLayout.Component`.", "params": [{"description": "Children or content to include in component. Default: `[]`.", "name": "children", "type": "any"}, {"description": "Styling to use on component. Default: `{}`.", "name": "style", "type": "object"}, {"description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes", "type": "object"}, {"description": "Events to listen to on component. Default: `{}`.", "name": "events", "type": "object"}], "return": {}, "longDescription": "Has similar properties to an HTML `div` element with attribute `menucontent`."}, "ui.models.appLayout.MenuTitle": {"shortDescription": "MenuTitle class, extends `ui.models.appLayout.Component`.", "params": [{"description": "Children or content to include in component. Default: `[]`.", "name": "children", "type": "any"}, {"description": "Styling to use on component. Default: `{}`.", "name": "style", "type": "object"}, {"description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes", "type": "object"}, {"description": "Events to listen to on component. Default: `{}`.", "name": "events", "type": "object"}], "return": {}, "longDescription": "Has similar properties to an HTML `div` element with attribute `menutitle`."}, "ui.models.appLayout.ActionButton": {"shortDescription": "ActionButton class, extends `ui.models.appLayout.Component`.", "params": [{"description": "Children or content to include in component. Default: `[]`.", "name": "children", "type": "any"}, {"description": "Styling to use on component. Default: `{}`.", "name": "style", "type": "object"}, {"description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes", "type": "object"}, {"description": "Events to listen to on component. Default: `{}`.", "name": "events", "type": "object"}], "return": {}, "longDescription": "Has similar properties to an HTML `button` element with attribute `menubaractionbutton`.\nIt is recommended to only have an icon representing the button."}, "ui.models.appLayout._postRefresh": {"shortDescription": "Restore any volatile component properties after refresh.", "params": [], "return": {}, "longDescription": ""}, "appLayoutFunctions.dialogs.close": {"shortDescription": "Close any menu which is an instance of `ui.models.appLayout.Menu`.", "params": [{"description": "DOM object of menu to close. Default: `dom.element(\"div[menu]\")`.", "name": "domObject", "type": "object"}], "return": {}, "longDescription": ""}, "ui.models.appLayout.MenuDivider": {"shortDescription": "MenuDivider class, extends `ui.models.appLayout.Component`.", "params": [{"description": "Styling to use on component. Default: `{}`.", "name": "style", "type": "object"}, {"description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes", "type": "object"}, {"description": "Events to listen to on component. Default: `{}`.", "name": "events", "type": "object"}], "return": {}, "longDescription": "Has similar properties to an HTML `hr` element with attribute `menudivider`."}, "ui.models.appLayout._preRefresh": {"shortDescription": "Save any volatile component properties before refresh.", "params": [], "return": {}, "longDescription": ""}, "ui.models.appLayout.MenuButton": {"shortDescription": "MenuButton class, extends `ui.models.appLayout.Component`.", "params": [{"description": "Children or content to include in component. Default: `[]`.", "name": "children", "type": "any"}, {"description": "Styling to use on component. Default: `{}`.", "name": "style", "type": "object"}, {"description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes", "type": "object"}, {"description": "Events to listen to on component. Default: `{}`.", "name": "events", "type": "object"}], "return": {}, "longDescription": "Has similar properties to an HTML `button` element with attribute `menubutton`."}, "ui.models.appLayout.Content": {"shortDescription": "Content class, extends `ui.models.appLayout.Component`.", "params": [{"description": "Children or content to include in component. Default: `[]`.", "name": "children", "type": "any"}, {"description": "Styling to use on component. Default: `{}`.", "name": "style", "type": "object"}, {"description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes", "type": "object"}, {"description": "Events to listen to on component. Default: `{}`.", "name": "events", "type": "object"}], "return": {}, "longDescription": "Has similar properties to an HTML `div` element with attribute `appcontent`."}}