{"ui.models.appLayout._preRefresh": {"params": [], "longDescription": "", "return": {}, "shortDescription": "Save any volatile component properties before refresh."}, "ui.models.appLayout.MenuDivider": {"params": [{"name": "style", "description": "Styling to use on component. Default: `{}`.", "type": "object"}, {"name": "attributes", "description": "HTML attributes to use on component. Default: `{}`.", "type": "object"}, {"name": "events", "description": "Events to listen to on component. Default: `{}`.", "type": "object"}], "longDescription": "Has similar properties to an HTML `hr` element with attribute `menudivider`.", "return": {}, "shortDescription": "MenuDivider class, extends `ui.models.appLayout.Component`."}, "appLayoutFunctions.getContentScrollPosition": {"params": [], "longDescription": "", "return": {"description": "Vector class of scroll position.", "type": "object"}, "shortDescription": "Get the vector of the scroll position of the main UI content."}, "ui.models.appLayout.MenuContent": {"params": [{"name": "children", "description": "Children or content to include in component. Default: `[]`.", "type": "any"}, {"name": "style", "description": "Styling to use on component. Default: `{}`.", "type": "object"}, {"name": "attributes", "description": "HTML attributes to use on component. Default: `{}`.", "type": "object"}, {"name": "events", "description": "Events to listen to on component. Default: `{}`.", "type": "object"}], "longDescription": "Has similar properties to an HTML `div` element with attribute `menucontent`.", "return": {}, "shortDescription": "MenuContent class, extends `ui.models.appLayout.Component`."}, "ui.models.appLayout.MenuButton": {"params": [{"name": "children", "description": "Children or content to include in component. Default: `[]`.", "type": "any"}, {"name": "style", "description": "Styling to use on component. Default: `{}`.", "type": "object"}, {"name": "attributes", "description": "HTML attributes to use on component. Default: `{}`.", "type": "object"}, {"name": "events", "description": "Events to listen to on component. Default: `{}`.", "type": "object"}], "longDescription": "Has similar properties to an HTML `button` element with attribute `menubutton`.", "return": {}, "shortDescription": "MenuButton class, extends `ui.models.appLayout.Component`."}, "ui.models.appLayout.Component": {"params": [{"name": "children", "description": "Children or content to include in component. Default: `[]`.", "type": "any"}, {"name": "style", "description": "Styling to use on component. Default: `{}`.", "type": "object"}, {"name": "attributes", "description": "HTML attributes to use on component. Default: `{}`.", "type": "object"}, {"name": "events", "description": "Events to listen to on component. Default: `{}`.", "type": "object"}], "longDescription": "", "return": {}, "shortDescription": "Component class, extends `ui.components.Component`."}, "appLayoutFunctions.dialogs.register": {"params": [{"name": "domObject", "description": "DOM object of menu to register. Default: `dom.element(\"div[menu]\")`.", "type": "object"}], "longDescription": "", "return": {}, "shortDescription": "Register any menu for events and accessibility which is an instance of `ui.models.appLayout.Menu`."}, "ui.models.appLayout.MenuText": {"params": [{"name": "children", "description": "Children or content to include in component. Default: `[]`.", "type": "any"}, {"name": "style", "description": "Styling to use on component. Default: `{}`.", "type": "object"}, {"name": "attributes", "description": "HTML attributes to use on component. Default: `{}`.", "type": "object"}, {"name": "events", "description": "Events to listen to on component. Default: `{}`.", "type": "object"}], "longDescription": "Has similar properties to an HTML `div` element with attribute `menutext`.", "return": {}, "shortDescription": "MenuText class, extends `ui.models.appLayout.Component`."}, "ui.models.appLayout.Content": {"params": [{"name": "children", "description": "Children or content to include in component. Default: `[]`.", "type": "any"}, {"name": "style", "description": "Styling to use on component. Default: `{}`.", "type": "object"}, {"name": "attributes", "description": "HTML attributes to use on component. Default: `{}`.", "type": "object"}, {"name": "events", "description": "Events to listen to on component. Default: `{}`.", "type": "object"}], "longDescription": "Has similar properties to an HTML `div` element with attribute `appcontent`.", "return": {}, "shortDescription": "Content class, extends `ui.models.appLayout.Component`."}, "ui.models.appLayout.Menu": {"params": [{"name": "children", "description": "Children or content to include in component. Default: `[]`.", "type": "any"}, {"name": "style", "description": "Styling to use on component. Default: `{}`.", "type": "object"}, {"name": "attributes", "description": "HTML attributes to use on component. Default: `{}`.", "type": "object"}, {"name": "events", "description": "Events to listen to on component. Default: `{}`.", "type": "object"}], "longDescription": "Has similar properties to an HTML `div` element with attribute `menu`.\nShould have children `ui.models.appLayout.MenuTitle` and `ui.models.appLayout.MenuContent`.", "return": {}, "shortDescription": "Menu class, extends `ui.models.appLayout.Component`."}, "appLayoutFunctions.scrollContent": {"params": [{"name": "scrollTo", "description": "Vector class to scroll content to. Default: `new ui.Vector(0, 0)`.", "type": "object"}], "longDescription": "", "return": {}, "shortDescription": "Scroll the main UI content to the specified vector."}, "ui.models.appLayout.MenuTitle": {"params": [{"name": "children", "description": "Children or content to include in component. Default: `[]`.", "type": "any"}, {"name": "style", "description": "Styling to use on component. Default: `{}`.", "type": "object"}, {"name": "attributes", "description": "HTML attributes to use on component. Default: `{}`.", "type": "object"}, {"name": "events", "description": "Events to listen to on component. Default: `{}`.", "type": "object"}], "longDescription": "Has similar properties to an HTML `div` element with attribute `menutitle`.", "return": {}, "shortDescription": "MenuTitle class, extends `ui.models.appLayout.Component`."}, "ui.models.appLayout.ActionButton": {"params": [{"name": "children", "description": "Children or content to include in component. Default: `[]`.", "type": "any"}, {"name": "style", "description": "Styling to use on component. Default: `{}`.", "type": "object"}, {"name": "attributes", "description": "HTML attributes to use on component. Default: `{}`.", "type": "object"}, {"name": "events", "description": "Events to listen to on component. Default: `{}`.", "type": "object"}], "longDescription": "Has similar properties to an HTML `button` element with attribute `menubaractionbutton`.\nIt is recommended to only have an icon representing the button.", "return": {}, "shortDescription": "ActionButton class, extends `ui.models.appLayout.Component`."}, "appLayoutFunctions.dialogs.close": {"params": [{"name": "domObject", "description": "DOM object of menu to close. Default: `dom.element(\"div[menu]\")`.", "type": "object"}], "longDescription": "", "return": {}, "shortDescription": "Close any menu which is an instance of `ui.models.appLayout.Menu`."}, "ui.models.appLayout.MenuBarButton": {"params": [{"name": "children", "description": "Children or content to include in component. Default: `[]`.", "type": "any"}, {"name": "style", "description": "Styling to use on component. Default: `{}`.", "type": "object"}, {"name": "attributes", "description": "HTML attributes to use on component. Default: `{}`.", "type": "object"}, {"name": "events", "description": "Events to listen to on component. Default: `{}`.", "type": "object"}], "longDescription": "Has similar properties to an HTML `button` element with attribute `menubarbutton`.\nIt is recommended to only have an icon representing the button.", "return": {}, "shortDescription": "MenuBarButton class, extends `ui.models.appLayout.Component`."}, "ui.models.appLayout.MenuBar": {"params": [{"name": "children", "description": "Children or content to include in component. Default: `[]`.", "type": "any"}, {"name": "style", "description": "Styling to use on component. Default: `{}`.", "type": "object"}, {"name": "attributes", "description": "HTML attributes to use on component. Default: `{}`.", "type": "object"}, {"name": "events", "description": "Events to listen to on component. Default: `{}`.", "type": "object"}], "longDescription": "Has similar properties to an HTML `header` element.", "return": {}, "shortDescription": "MenuBar class, extends `ui.models.appLayout.Component`."}, "appLayoutFunctions.dialogs.open": {"params": [{"name": "domObject", "description": "DOM object of menu to open. Default: `dom.element(\"div[menu]\")`.", "type": "object"}], "longDescription": "", "return": {}, "shortDescription": "Open any menu which is an instance of `ui.models.appLayout.Menu`."}, "ui.models.appLayout._postRefresh": {"params": [], "longDescription": "", "return": {}, "shortDescription": "Restore any volatile component properties after refresh."}}