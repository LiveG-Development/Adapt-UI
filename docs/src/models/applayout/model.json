{"ui.models.appLayout.Content": {"shortDescription": "Content class, extends `ui.models.appLayout.Component`.", "longDescription": "Has similar properties to an HTML `div` element with attribute `appcontent`.", "params": [{"name": "children", "type": "any", "description": "Children or content to include in component. Default: `[]`."}, {"name": "style", "type": "object", "description": "Styling to use on component. Default: `{}`."}, {"name": "attributes", "type": "object", "description": "HTML attributes to use on component. Default: `{}`."}, {"name": "events", "type": "object", "description": "Events to listen to on component. Default: `{}`."}], "return": {}}, "appLayoutFunctions.dialogs.register": {"shortDescription": "Register any menu for events and accessibility which is an instance of `ui.models.appLayout.Menu`.", "longDescription": "", "params": [{"name": "domObject", "type": "object", "description": "DOM object of menu to register. Default: `dom.element(\"div[menu]\")`."}], "return": {}}, "ui.models.appLayout.DialogContent": {"shortDescription": "DialogContent class, extends `ui.models.appLayout.Component`.", "longDescription": "Has similar properties to an HTML `div` element with attribute `dialogcontent`.", "params": [{"name": "children", "type": "any", "description": "Children or content to include in component. Default: `[]`."}, {"name": "style", "type": "object", "description": "Styling to use on component. Default: `{}`."}, {"name": "attributes", "type": "object", "description": "HTML attributes to use on component. Default: `{}`."}, {"name": "events", "type": "object", "description": "Events to listen to on component. Default: `{}`."}], "return": {}}, "ui.models.appLayout.MenuContent": {"shortDescription": "MenuContent class, extends `ui.models.appLayout.Component`.", "longDescription": "Has similar properties to an HTML `div` element with attribute `menucontent`.", "params": [{"name": "children", "type": "any", "description": "Children or content to include in component. Default: `[]`."}, {"name": "style", "type": "object", "description": "Styling to use on component. Default: `{}`."}, {"name": "attributes", "type": "object", "description": "HTML attributes to use on component. Default: `{}`."}, {"name": "events", "type": "object", "description": "Events to listen to on component. Default: `{}`."}], "return": {}}, "ui.models.appLayout.MenuBarButton": {"shortDescription": "MenuBarButton class, extends `ui.models.appLayout.Component`.", "longDescription": "Has similar properties to an HTML `button` element with attribute `menubarbutton`.\nIt is recommended to only have an icon representing the button.", "params": [{"name": "children", "type": "any", "description": "Children or content to include in component. Default: `[]`."}, {"name": "style", "type": "object", "description": "Styling to use on component. Default: `{}`."}, {"name": "attributes", "type": "object", "description": "HTML attributes to use on component. Default: `{}`."}, {"name": "events", "type": "object", "description": "Events to listen to on component. Default: `{}`."}], "return": {}}, "ui.models.appLayout.Dialog": {"shortDescription": "Dialog class, extends `ui.models.appLayout.Component`.", "longDescription": "Has similar properties to an HTML `div` element with attribute `Dialog`.\nShould have children `ui.models.appLayout.DialogTitle` and `ui.models.appLayout.DialogContent`.", "params": [{"name": "children", "type": "any", "description": "Children or content to include in component. Default: `[]`."}, {"name": "style", "type": "object", "description": "Styling to use on component. Default: `{}`."}, {"name": "attributes", "type": "object", "description": "HTML attributes to use on component. Default: `{}`."}, {"name": "events", "type": "object", "description": "Events to listen to on component. Default: `{}`."}], "return": {}}, "ui.models.appLayout.Component": {"shortDescription": "Component class, extends `ui.components.Component`.", "longDescription": "", "params": [{"name": "children", "type": "any", "description": "Children or content to include in component. Default: `[]`."}, {"name": "style", "type": "object", "description": "Styling to use on component. Default: `{}`."}, {"name": "attributes", "type": "object", "description": "HTML attributes to use on component. Default: `{}`."}, {"name": "events", "type": "object", "description": "Events to listen to on component. Default: `{}`."}], "return": {}}, "appLayoutFunctions.getContentScrollPosition": {"shortDescription": "Get the vector of the scroll position of the main UI content.", "longDescription": "", "params": [], "return": {"type": "object", "description": "Vector class of scroll position."}}, "ui.models.appLayout.MenuDivider": {"shortDescription": "MenuDivider class, extends `ui.models.appLayout.Component`.", "longDescription": "Has similar properties to an HTML `hr` element with attribute `menudivider`.", "params": [{"name": "style", "type": "object", "description": "Styling to use on component. Default: `{}`."}, {"name": "attributes", "type": "object", "description": "HTML attributes to use on component. Default: `{}`."}, {"name": "events", "type": "object", "description": "Events to listen to on component. Default: `{}`."}], "return": {}}, "ui.models.appLayout.Menu": {"shortDescription": "Menu class, extends `ui.models.appLayout.Component`.", "longDescription": "Has similar properties to an HTML `div` element with attribute `menu`.\nShould have children `ui.models.appLayout.MenuTitle` and `ui.models.appLayout.MenuContent`.", "params": [{"name": "children", "type": "any", "description": "Children or content to include in component. Default: `[]`."}, {"name": "style", "type": "object", "description": "Styling to use on component. Default: `{}`."}, {"name": "attributes", "type": "object", "description": "HTML attributes to use on component. Default: `{}`."}, {"name": "events", "type": "object", "description": "Events to listen to on component. Default: `{}`."}], "return": {}}, "ui.models.appLayout.MenuButton": {"shortDescription": "MenuButton class, extends `ui.models.appLayout.Component`.", "longDescription": "Has similar properties to an HTML `button` element with attribute `menubutton`.", "params": [{"name": "children", "type": "any", "description": "Children or content to include in component. Default: `[]`."}, {"name": "style", "type": "object", "description": "Styling to use on component. Default: `{}`."}, {"name": "attributes", "type": "object", "description": "HTML attributes to use on component. Default: `{}`."}, {"name": "events", "type": "object", "description": "Events to listen to on component. Default: `{}`."}], "return": {}}, "ui.models.appLayout.MenuText": {"shortDescription": "MenuText class, extends `ui.models.appLayout.Component`.", "longDescription": "Has similar properties to an HTML `div` element with attribute `menutext`.", "params": [{"name": "children", "type": "any", "description": "Children or content to include in component. Default: `[]`."}, {"name": "style", "type": "object", "description": "Styling to use on component. Default: `{}`."}, {"name": "attributes", "type": "object", "description": "HTML attributes to use on component. Default: `{}`."}, {"name": "events", "type": "object", "description": "Events to listen to on component. Default: `{}`."}], "return": {}}, "appLayoutFunctions.scrollContent": {"shortDescription": "Scroll the main UI content to the specified vector.", "longDescription": "", "params": [{"name": "scrollTo", "type": "object", "description": "Vector class to scroll content to. Default: `new ui.Vector(0, 0)`."}], "return": {}}, "ui.models.appLayout.DialogTitle": {"shortDescription": "DialogTitle class, extends `ui.models.appLayout.Component`.", "longDescription": "Has similar properties to an HTML `div` element with attribute `dialogtitle`.", "params": [{"name": "children", "type": "any", "description": "Children or content to include in component. Default: `[]`."}, {"name": "style", "type": "object", "description": "Styling to use on component. Default: `{}`."}, {"name": "attributes", "type": "object", "description": "HTML attributes to use on component. Default: `{}`."}, {"name": "events", "type": "object", "description": "Events to listen to on component. Default: `{}`."}], "return": {}}, "appLayoutFunctions.dialogs.close": {"shortDescription": "Close any menu which is an instance of `ui.models.appLayout.Menu`.", "longDescription": "", "params": [{"name": "domObject", "type": "object", "description": "DOM object of menu to close. Default: `dom.element(\"div[menu]\")`."}], "return": {}}, "appLayoutFunctions.dialogs.open": {"shortDescription": "Open any menu which is an instance of `ui.models.appLayout.Menu`.", "longDescription": "", "params": [{"name": "domObject", "type": "object", "description": "DOM object of menu to open. Default: `dom.element(\"div[menu]\")`."}], "return": {}}, "ui.models.appLayout._preRefresh": {"shortDescription": "Save any volatile component properties before refresh.", "longDescription": "", "params": [], "return": {}}, "ui.models.appLayout._postRefresh": {"shortDescription": "Restore any volatile component properties after refresh.", "longDescription": "", "params": [], "return": {}}, "ui.models.appLayout.MenuBar": {"shortDescription": "MenuBar class, extends `ui.models.appLayout.Component`.", "longDescription": "Has similar properties to an HTML `header` element.", "params": [{"name": "children", "type": "any", "description": "Children or content to include in component. Default: `[]`."}, {"name": "style", "type": "object", "description": "Styling to use on component. Default: `{}`."}, {"name": "attributes", "type": "object", "description": "HTML attributes to use on component. Default: `{}`."}, {"name": "events", "type": "object", "description": "Events to listen to on component. Default: `{}`."}], "return": {}}, "ui.models.appLayout.MenuTitle": {"shortDescription": "MenuTitle class, extends `ui.models.appLayout.Component`.", "longDescription": "Has similar properties to an HTML `div` element with attribute `menutitle`.", "params": [{"name": "children", "type": "any", "description": "Children or content to include in component. Default: `[]`."}, {"name": "style", "type": "object", "description": "Styling to use on component. Default: `{}`."}, {"name": "attributes", "type": "object", "description": "HTML attributes to use on component. Default: `{}`."}, {"name": "events", "type": "object", "description": "Events to listen to on component. Default: `{}`."}], "return": {}}, "ui.models.appLayout.ActionButton": {"shortDescription": "ActionButton class, extends `ui.models.appLayout.Component`.", "longDescription": "Has similar properties to an HTML `button` element with attribute `actionbutton`.\nIt is recommended to only have an icon representing the button.", "params": [{"name": "children", "type": "any", "description": "Children or content to include in component. Default: `[]`."}, {"name": "style", "type": "object", "description": "Styling to use on component. Default: `{}`."}, {"name": "attributes", "type": "object", "description": "HTML attributes to use on component. Default: `{}`."}, {"name": "events", "type": "object", "description": "Events to listen to on component. Default: `{}`."}], "return": {}}}