{"ui.models.appLayout.ButtonedFooter": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "type": "any", "name": "children"}, {"description": "Styling to use on component. Default: `{}`.", "type": "object", "name": "style"}, {"description": "HTML attributes to use on component. Default: `{}`.", "type": "object", "name": "attributes"}, {"description": "Events to listen to on component. Default: `{}`.", "type": "object", "name": "events"}], "return": {}, "shortDescription": "ButtonedFooter class, extends `ui.models.appLayout.Component`.", "longDescription": "Has similar properties to an HTML `div` element with attribute `buttonedfooter`."}, "ui.models.appLayout.MenuText": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "type": "any", "name": "children"}, {"description": "Styling to use on component. Default: `{}`.", "type": "object", "name": "style"}, {"description": "HTML attributes to use on component. Default: `{}`.", "type": "object", "name": "attributes"}, {"description": "Events to listen to on component. Default: `{}`.", "type": "object", "name": "events"}], "return": {}, "shortDescription": "MenuText class, extends `ui.models.appLayout.Component`.", "longDescription": "Has similar properties to an HTML `div` element with attribute `menutext`."}, "ui.models.appLayout.DialogTitle": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "type": "any", "name": "children"}, {"description": "Styling to use on component. Default: `{}`.", "type": "object", "name": "style"}, {"description": "HTML attributes to use on component. Default: `{}`.", "type": "object", "name": "attributes"}, {"description": "Events to listen to on component. Default: `{}`.", "type": "object", "name": "events"}], "return": {}, "shortDescription": "DialogTitle class, extends `ui.models.appLayout.Component`.", "longDescription": "Has similar properties to an HTML `div` element with attribute `dialogtitle`."}, "ui.models.appLayout._preRefresh": {"params": [], "return": {}, "shortDescription": "Save any volatile component properties before refresh.", "longDescription": ""}, "ui.models.appLayout.MenuBarButton": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "type": "any", "name": "children"}, {"description": "Styling to use on component. Default: `{}`.", "type": "object", "name": "style"}, {"description": "HTML attributes to use on component. Default: `{}`.", "type": "object", "name": "attributes"}, {"description": "Events to listen to on component. Default: `{}`.", "type": "object", "name": "events"}], "return": {}, "shortDescription": "MenuBarButton class, extends `ui.models.appLayout.Component`.", "longDescription": "Has similar properties to an HTML `button` element with attribute `menubarbutton`.\nIt is recommended to only have an icon representing the button."}, "ui.models.appLayout.Sidebar": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "type": "any", "name": "children"}, {"description": "Styling to use on component. Default: `{}`.", "type": "object", "name": "style"}, {"description": "HTML attributes to use on component. Default: `{}`.", "type": "object", "name": "attributes"}, {"description": "Events to listen to on component. Default: `{}`.", "type": "object", "name": "events"}], "return": {}, "shortDescription": "Sidebar class, extends `ui.models.appLayout.Sidebar`.", "longDescription": "Has similar properties to an HTML `aside` element."}, "appLayoutFunctions.scrollContent": {"params": [{"description": "Vector class to scroll content to. Default: `new ui.Vector(0, 0)`.", "type": "object", "name": "scrollTo"}], "return": {}, "shortDescription": "Scroll the main UI content to the specified vector.", "longDescription": ""}, "appLayoutFunctions.dialogs.open": {"params": [{"description": "DOM object of menu to open. Default: `dom.element(\"div[menu]\")`.", "type": "object", "name": "domObject"}], "return": {}, "shortDescription": "Open any menu which is an instance of `ui.models.appLayout.Menu`.", "longDescription": ""}, "ui.models.appLayout.MenuTitle": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "type": "any", "name": "children"}, {"description": "Styling to use on component. Default: `{}`.", "type": "object", "name": "style"}, {"description": "HTML attributes to use on component. Default: `{}`.", "type": "object", "name": "attributes"}, {"description": "Events to listen to on component. Default: `{}`.", "type": "object", "name": "events"}], "return": {}, "shortDescription": "MenuTitle class, extends `ui.models.appLayout.Component`.", "longDescription": "Has similar properties to an HTML `div` element with attribute `menutitle`."}, "ui.models.appLayout.DialogContent": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "type": "any", "name": "children"}, {"description": "Styling to use on component. Default: `{}`.", "type": "object", "name": "style"}, {"description": "HTML attributes to use on component. Default: `{}`.", "type": "object", "name": "attributes"}, {"description": "Events to listen to on component. Default: `{}`.", "type": "object", "name": "events"}], "return": {}, "shortDescription": "DialogContent class, extends `ui.models.appLayout.Component`.", "longDescription": "Has similar properties to an HTML `div` element with attribute `dialogcontent`."}, "appLayoutFunctions.dialogs.close": {"params": [{"description": "DOM object of menu to close. Default: `dom.element(\"div[menu]\")`.", "type": "object", "name": "domObject"}], "return": {}, "shortDescription": "Close any menu which is an instance of `ui.models.appLayout.Menu`.", "longDescription": ""}, "ui.models.appLayout.Content": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "type": "any", "name": "children"}, {"description": "Styling to use on component. Default: `{}`.", "type": "object", "name": "style"}, {"description": "HTML attributes to use on component. Default: `{}`.", "type": "object", "name": "attributes"}, {"description": "Events to listen to on component. Default: `{}`.", "type": "object", "name": "events"}], "return": {}, "shortDescription": "Content class, extends `ui.models.appLayout.Component`.", "longDescription": "Has similar properties to an HTML `div` element with attribute `appcontent`."}, "ui.models.appLayout.ButtonedContent": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "type": "any", "name": "children"}, {"description": "Styling to use on component. Default: `{}`.", "type": "object", "name": "style"}, {"description": "HTML attributes to use on component. Default: `{}`.", "type": "object", "name": "attributes"}, {"description": "Events to listen to on component. Default: `{}`.", "type": "object", "name": "events"}], "return": {}, "shortDescription": "ButtonedContent class, extends `ui.models.appLayout.Component`.", "longDescription": "Has similar properties to an HTML `div` element with attribute `buttonedcontent`."}, "ui.models.appLayout.ActionButton": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "type": "any", "name": "children"}, {"description": "Styling to use on component. Default: `{}`.", "type": "object", "name": "style"}, {"description": "HTML attributes to use on component. Default: `{}`.", "type": "object", "name": "attributes"}, {"description": "Events to listen to on component. Default: `{}`.", "type": "object", "name": "events"}], "return": {}, "shortDescription": "ActionButton class, extends `ui.models.appLayout.Component`.", "longDescription": "Has similar properties to an HTML `button` element with attribute `actionbutton`.\nIt is recommended to only have an icon representing the button."}, "ui.models.appLayout.MenuContent": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "type": "any", "name": "children"}, {"description": "Styling to use on component. Default: `{}`.", "type": "object", "name": "style"}, {"description": "HTML attributes to use on component. Default: `{}`.", "type": "object", "name": "attributes"}, {"description": "Events to listen to on component. Default: `{}`.", "type": "object", "name": "events"}], "return": {}, "shortDescription": "MenuContent class, extends `ui.models.appLayout.Component`.", "longDescription": "Has similar properties to an HTML `div` element with attribute `menucontent`."}, "ui.models.appLayout.MenuBar": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "type": "any", "name": "children"}, {"description": "Styling to use on component. Default: `{}`.", "type": "object", "name": "style"}, {"description": "HTML attributes to use on component. Default: `{}`.", "type": "object", "name": "attributes"}, {"description": "Events to listen to on component. Default: `{}`.", "type": "object", "name": "events"}], "return": {}, "shortDescription": "MenuBar class, extends `ui.models.appLayout.Component`.", "longDescription": "Has similar properties to an HTML `header` element."}, "ui.models.appLayout.MenuDivider": {"params": [{"description": "Styling to use on component. Default: `{}`.", "type": "object", "name": "style"}, {"description": "HTML attributes to use on component. Default: `{}`.", "type": "object", "name": "attributes"}, {"description": "Events to listen to on component. Default: `{}`.", "type": "object", "name": "events"}], "return": {}, "shortDescription": "MenuDivider class, extends `ui.models.appLayout.Component`.", "longDescription": "Has similar properties to an HTML `hr` element with attribute `menudivider`."}, "appLayoutFunctions.getContentScrollPosition": {"params": [], "return": {"description": "Vector class of scroll position.", "type": "object"}, "shortDescription": "Get the vector of the scroll position of the main UI content.", "longDescription": ""}, "ui.models.appLayout.Component": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "type": "any", "name": "children"}, {"description": "Styling to use on component. Default: `{}`.", "type": "object", "name": "style"}, {"description": "HTML attributes to use on component. Default: `{}`.", "type": "object", "name": "attributes"}, {"description": "Events to listen to on component. Default: `{}`.", "type": "object", "name": "events"}], "return": {}, "shortDescription": "Component class, extends `ui.components.Component`.", "longDescription": ""}, "ui.models.appLayout._postRefresh": {"params": [], "return": {}, "shortDescription": "Restore any volatile component properties after refresh.", "longDescription": ""}, "ui.models.appLayout.Menu": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "type": "any", "name": "children"}, {"description": "Styling to use on component. Default: `{}`.", "type": "object", "name": "style"}, {"description": "HTML attributes to use on component. Default: `{}`.", "type": "object", "name": "attributes"}, {"description": "Events to listen to on component. Default: `{}`.", "type": "object", "name": "events"}], "return": {}, "shortDescription": "Menu class, extends `ui.models.appLayout.Component`.", "longDescription": "Has similar properties to an HTML `div` element with attribute `menu`.\nShould have children `ui.models.appLayout.MenuTitle` and `ui.models.appLayout.MenuContent`."}, "ui.models.appLayout.Dialog": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "type": "any", "name": "children"}, {"description": "Styling to use on component. Default: `{}`.", "type": "object", "name": "style"}, {"description": "HTML attributes to use on component. Default: `{}`.", "type": "object", "name": "attributes"}, {"description": "Events to listen to on component. Default: `{}`.", "type": "object", "name": "events"}], "return": {}, "shortDescription": "Dialog class, extends `ui.models.appLayout.Component`.", "longDescription": "Has similar properties to an HTML `div` element with attribute `Dialog`.\nShould have children `ui.models.appLayout.DialogTitle` and `ui.models.appLayout.DialogContent`."}, "ui.models.appLayout.MenuButton": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "type": "any", "name": "children"}, {"description": "to make the button selected. Use `true` to enable. Default: `false`.", "type": "Whether", "name": "selected"}, {"description": "Styling to use on component. Default: `{}`.", "type": "object", "name": "style"}, {"description": "HTML attributes to use on component. Default: `{}`.", "type": "object", "name": "attributes"}, {"description": "Events to listen to on component. Default: `{}`.", "type": "object", "name": "events"}], "return": {}, "shortDescription": "MenuButton class, extends `ui.models.appLayout.Component`.", "longDescription": "Has similar properties to an HTML `button` element with attribute `menubutton`."}, "appLayoutFunctions.dialogs.register": {"params": [{"description": "DOM object of menu to register. Default: `dom.element(\"div[menu]\")`.", "type": "object", "name": "domObject"}], "return": {}, "shortDescription": "Register any menu for events and accessibility which is an instance of `ui.models.appLayout.Menu`.", "longDescription": ""}}