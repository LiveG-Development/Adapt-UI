{"appLayoutFunctions.scrollContent": {"longDescription": "", "return": {}, "shortDescription": "Scroll the main UI content to the specified vector.", "params": [{"type": "object", "description": "Vector class to scroll content to. Default: `new ui.Vector(0, 0)`.", "name": "scrollTo"}]}, "ui.models.appLayout.MenuButton": {"longDescription": "Has similar properties to an HTML `button` element with attribute `menubutton`.", "return": {}, "shortDescription": "MenuButton class, extends `ui.models.appLayout.Component`.", "params": [{"type": "any", "description": "Children or content to include in component. Default: `[]`.", "name": "children"}, {"type": "object", "description": "Styling to use on component. Default: `{}`.", "name": "style"}, {"type": "object", "description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes"}, {"type": "object", "description": "Events to listen to on component. Default: `{}`.", "name": "events"}]}, "ui.models.appLayout.Content": {"longDescription": "Has similar properties to an HTML `div` element with attribute `appcontent`.", "return": {}, "shortDescription": "Content class, extends `ui.models.appLayout.Component`.", "params": [{"type": "any", "description": "Children or content to include in component. Default: `[]`.", "name": "children"}, {"type": "object", "description": "Styling to use on component. Default: `{}`.", "name": "style"}, {"type": "object", "description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes"}, {"type": "object", "description": "Events to listen to on component. Default: `{}`.", "name": "events"}]}, "appLayoutFunctions.dialogs.open": {"longDescription": "", "return": {}, "shortDescription": "Open any menu which is an instance of `ui.models.appLayout.Menu`.", "params": [{"type": "object", "description": "DOM object of menu to open. Default: `dom.element(\"div[menu]\")`.", "name": "domObject"}]}, "appLayoutFunctions.dialogs.close": {"longDescription": "", "return": {}, "shortDescription": "Close any menu which is an instance of `ui.models.appLayout.Menu`.", "params": [{"type": "object", "description": "DOM object of menu to close. Default: `dom.element(\"div[menu]\")`.", "name": "domObject"}]}, "ui.models.appLayout.MenuBar": {"longDescription": "Has similar properties to an HTML `header` element.", "return": {}, "shortDescription": "MenuBar class, extends `ui.models.appLayout.Component`.", "params": [{"type": "any", "description": "Children or content to include in component. Default: `[]`.", "name": "children"}, {"type": "object", "description": "Styling to use on component. Default: `{}`.", "name": "style"}, {"type": "object", "description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes"}, {"type": "object", "description": "Events to listen to on component. Default: `{}`.", "name": "events"}]}, "ui.models.appLayout.MenuDivider": {"longDescription": "Has similar properties to an HTML `hr` element with attribute `menudivider`.", "return": {}, "shortDescription": "MenuDivider class, extends `ui.models.appLayout.Component`.", "params": [{"type": "object", "description": "Styling to use on component. Default: `{}`.", "name": "style"}, {"type": "object", "description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes"}, {"type": "object", "description": "Events to listen to on component. Default: `{}`.", "name": "events"}]}, "ui.models.appLayout._preRefresh": {"longDescription": "", "return": {}, "shortDescription": "Save any volatile component properties before refresh.", "params": []}, "ui.models.appLayout.MenuTitle": {"longDescription": "Has similar properties to an HTML `div` element with attribute `menutitle`.", "return": {}, "shortDescription": "MenuTitle class, extends `ui.models.appLayout.Component`.", "params": [{"type": "any", "description": "Children or content to include in component. Default: `[]`.", "name": "children"}, {"type": "object", "description": "Styling to use on component. Default: `{}`.", "name": "style"}, {"type": "object", "description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes"}, {"type": "object", "description": "Events to listen to on component. Default: `{}`.", "name": "events"}]}, "ui.models.appLayout.MenuBarButton": {"longDescription": "Has similar properties to an HTML `button` element with attribute `menubarbutton`.\nIt is recommended to only have an icon representing the button.", "return": {}, "shortDescription": "MenuBarButton class, extends `ui.models.appLayout.Component`.", "params": [{"type": "any", "description": "Children or content to include in component. Default: `[]`.", "name": "children"}, {"type": "object", "description": "Styling to use on component. Default: `{}`.", "name": "style"}, {"type": "object", "description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes"}, {"type": "object", "description": "Events to listen to on component. Default: `{}`.", "name": "events"}]}, "ui.models.appLayout.MenuText": {"longDescription": "Has similar properties to an HTML `div` element with attribute `menutext`.", "return": {}, "shortDescription": "MenuText class, extends `ui.models.appLayout.Component`.", "params": [{"type": "any", "description": "Children or content to include in component. Default: `[]`.", "name": "children"}, {"type": "object", "description": "Styling to use on component. Default: `{}`.", "name": "style"}, {"type": "object", "description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes"}, {"type": "object", "description": "Events to listen to on component. Default: `{}`.", "name": "events"}]}, "ui.models.appLayout.Component": {"longDescription": "", "return": {}, "shortDescription": "Component class, extends `ui.components.Component`.", "params": [{"type": "any", "description": "Children or content to include in component. Default: `[]`.", "name": "children"}, {"type": "object", "description": "Styling to use on component. Default: `{}`.", "name": "style"}, {"type": "object", "description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes"}, {"type": "object", "description": "Events to listen to on component. Default: `{}`.", "name": "events"}]}, "ui.models.appLayout.ActionButton": {"longDescription": "Has similar properties to an HTML `button` element with attribute `menubaractionbutton`.\nIt is recommended to only have an icon representing the button.", "return": {}, "shortDescription": "ActionButton class, extends `ui.models.appLayout.Component`.", "params": [{"type": "any", "description": "Children or content to include in component. Default: `[]`.", "name": "children"}, {"type": "object", "description": "Styling to use on component. Default: `{}`.", "name": "style"}, {"type": "object", "description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes"}, {"type": "object", "description": "Events to listen to on component. Default: `{}`.", "name": "events"}]}, "ui.models.appLayout._postRefresh": {"longDescription": "", "return": {}, "shortDescription": "Restore any volatile component properties after refresh.", "params": []}, "ui.models.appLayout.Menu": {"longDescription": "Has similar properties to an HTML `div` element with attribute `menu`.\nShould have children `ui.models.appLayout.MenuTitle` and `ui.models.appLayout.MenuContent`.", "return": {}, "shortDescription": "Menu class, extends `ui.models.appLayout.Component`.", "params": [{"type": "any", "description": "Children or content to include in component. Default: `[]`.", "name": "children"}, {"type": "object", "description": "Styling to use on component. Default: `{}`.", "name": "style"}, {"type": "object", "description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes"}, {"type": "object", "description": "Events to listen to on component. Default: `{}`.", "name": "events"}]}, "ui.models.appLayout.MenuContent": {"longDescription": "Has similar properties to an HTML `div` element with attribute `menucontent`.", "return": {}, "shortDescription": "MenuContent class, extends `ui.models.appLayout.Component`.", "params": [{"type": "any", "description": "Children or content to include in component. Default: `[]`.", "name": "children"}, {"type": "object", "description": "Styling to use on component. Default: `{}`.", "name": "style"}, {"type": "object", "description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes"}, {"type": "object", "description": "Events to listen to on component. Default: `{}`.", "name": "events"}]}, "appLayoutFunctions.dialogs.register": {"longDescription": "", "return": {}, "shortDescription": "Register any menu for events and accessibility which is an instance of `ui.models.appLayout.Menu`.", "params": [{"type": "object", "description": "DOM object of menu to register. Default: `dom.element(\"div[menu]\")`.", "name": "domObject"}]}, "appLayoutFunctions.getContentScrollPosition": {"longDescription": "", "return": {"type": "object", "description": "Vector class of scroll position."}, "shortDescription": "Get the vector of the scroll position of the main UI content.", "params": []}}