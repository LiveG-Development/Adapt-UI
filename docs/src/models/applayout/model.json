{"ui.models.appLayout.DialogContent": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "name": "children", "type": "any"}, {"description": "Styling to use on component. Default: `{}`.", "name": "style", "type": "object"}, {"description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes", "type": "object"}, {"description": "Events to listen to on component. Default: `{}`.", "name": "events", "type": "object"}], "return": {}, "longDescription": "Has similar properties to an HTML `div` element with attribute `dialogcontent`.", "shortDescription": "DialogContent class, extends `ui.models.appLayout.Component`."}, "ui.models.appLayout.MenuBarButton": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "name": "children", "type": "any"}, {"description": "Styling to use on component. Default: `{}`.", "name": "style", "type": "object"}, {"description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes", "type": "object"}, {"description": "Events to listen to on component. Default: `{}`.", "name": "events", "type": "object"}], "return": {}, "longDescription": "Has similar properties to an HTML `button` element with attribute `menubarbutton`.\nIt is recommended to only have an icon representing the button.", "shortDescription": "MenuBarButton class, extends `ui.models.appLayout.Component`."}, "ui.models.appLayout._postRefresh": {"params": [], "return": {}, "longDescription": "", "shortDescription": "Restore any volatile component properties after refresh."}, "appLayoutFunctions.dialogs.close": {"params": [{"description": "DOM object of menu to close. Default: `dom.element(\"div[menu]\")`.", "name": "domObject", "type": "object"}], "return": {}, "longDescription": "", "shortDescription": "Close any menu which is an instance of `ui.models.appLayout.Menu`."}, "ui.models.appLayout.MenuText": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "name": "children", "type": "any"}, {"description": "Styling to use on component. Default: `{}`.", "name": "style", "type": "object"}, {"description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes", "type": "object"}, {"description": "Events to listen to on component. Default: `{}`.", "name": "events", "type": "object"}], "return": {}, "longDescription": "Has similar properties to an HTML `div` element with attribute `menutext`.", "shortDescription": "MenuText class, extends `ui.models.appLayout.Component`."}, "ui.models.appLayout.Content": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "name": "children", "type": "any"}, {"description": "Styling to use on component. Default: `{}`.", "name": "style", "type": "object"}, {"description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes", "type": "object"}, {"description": "Events to listen to on component. Default: `{}`.", "name": "events", "type": "object"}], "return": {}, "longDescription": "Has similar properties to an HTML `div` element with attribute `appcontent`.", "shortDescription": "Content class, extends `ui.models.appLayout.Component`."}, "ui.models.appLayout._preRefresh": {"params": [], "return": {}, "longDescription": "", "shortDescription": "Save any volatile component properties before refresh."}, "ui.models.appLayout.Component": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "name": "children", "type": "any"}, {"description": "Styling to use on component. Default: `{}`.", "name": "style", "type": "object"}, {"description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes", "type": "object"}, {"description": "Events to listen to on component. Default: `{}`.", "name": "events", "type": "object"}], "return": {}, "longDescription": "", "shortDescription": "Component class, extends `ui.components.Component`."}, "appLayoutFunctions.dialogs.register": {"params": [{"description": "DOM object of menu to register. Default: `dom.element(\"div[menu]\")`.", "name": "domObject", "type": "object"}], "return": {}, "longDescription": "", "shortDescription": "Register any menu for events and accessibility which is an instance of `ui.models.appLayout.Menu`."}, "appLayoutFunctions.getContentScrollPosition": {"params": [], "return": {"description": "Vector class of scroll position.", "type": "object"}, "longDescription": "", "shortDescription": "Get the vector of the scroll position of the main UI content."}, "ui.models.appLayout.Menu": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "name": "children", "type": "any"}, {"description": "Styling to use on component. Default: `{}`.", "name": "style", "type": "object"}, {"description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes", "type": "object"}, {"description": "Events to listen to on component. Default: `{}`.", "name": "events", "type": "object"}], "return": {}, "longDescription": "Has similar properties to an HTML `div` element with attribute `menu`.\nShould have children `ui.models.appLayout.MenuTitle` and `ui.models.appLayout.MenuContent`.", "shortDescription": "Menu class, extends `ui.models.appLayout.Component`."}, "ui.models.appLayout.MenuBar": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "name": "children", "type": "any"}, {"description": "Styling to use on component. Default: `{}`.", "name": "style", "type": "object"}, {"description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes", "type": "object"}, {"description": "Events to listen to on component. Default: `{}`.", "name": "events", "type": "object"}], "return": {}, "longDescription": "Has similar properties to an HTML `header` element.", "shortDescription": "MenuBar class, extends `ui.models.appLayout.Component`."}, "ui.models.appLayout.ActionButton": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "name": "children", "type": "any"}, {"description": "Styling to use on component. Default: `{}`.", "name": "style", "type": "object"}, {"description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes", "type": "object"}, {"description": "Events to listen to on component. Default: `{}`.", "name": "events", "type": "object"}], "return": {}, "longDescription": "Has similar properties to an HTML `button` element with attribute `actionbutton`.\nIt is recommended to only have an icon representing the button.", "shortDescription": "ActionButton class, extends `ui.models.appLayout.Component`."}, "appLayoutFunctions.dialogs.open": {"params": [{"description": "DOM object of menu to open. Default: `dom.element(\"div[menu]\")`.", "name": "domObject", "type": "object"}], "return": {}, "longDescription": "", "shortDescription": "Open any menu which is an instance of `ui.models.appLayout.Menu`."}, "ui.models.appLayout.MenuTitle": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "name": "children", "type": "any"}, {"description": "Styling to use on component. Default: `{}`.", "name": "style", "type": "object"}, {"description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes", "type": "object"}, {"description": "Events to listen to on component. Default: `{}`.", "name": "events", "type": "object"}], "return": {}, "longDescription": "Has similar properties to an HTML `div` element with attribute `menutitle`.", "shortDescription": "MenuTitle class, extends `ui.models.appLayout.Component`."}, "ui.models.appLayout.MenuContent": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "name": "children", "type": "any"}, {"description": "Styling to use on component. Default: `{}`.", "name": "style", "type": "object"}, {"description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes", "type": "object"}, {"description": "Events to listen to on component. Default: `{}`.", "name": "events", "type": "object"}], "return": {}, "longDescription": "Has similar properties to an HTML `div` element with attribute `menucontent`.", "shortDescription": "MenuContent class, extends `ui.models.appLayout.Component`."}, "ui.models.appLayout.ButtonedContent": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "name": "children", "type": "any"}, {"description": "Styling to use on component. Default: `{}`.", "name": "style", "type": "object"}, {"description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes", "type": "object"}, {"description": "Events to listen to on component. Default: `{}`.", "name": "events", "type": "object"}], "return": {}, "longDescription": "Has similar properties to an HTML `div` element with attribute `buttonedcontent`.", "shortDescription": "ButtonedContent class, extends `ui.models.appLayout.Component`."}, "appLayoutFunctions.scrollContent": {"params": [{"description": "Vector class to scroll content to. Default: `new ui.Vector(0, 0)`.", "name": "scrollTo", "type": "object"}], "return": {}, "longDescription": "", "shortDescription": "Scroll the main UI content to the specified vector."}, "ui.models.appLayout.MenuDivider": {"params": [{"description": "Styling to use on component. Default: `{}`.", "name": "style", "type": "object"}, {"description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes", "type": "object"}, {"description": "Events to listen to on component. Default: `{}`.", "name": "events", "type": "object"}], "return": {}, "longDescription": "Has similar properties to an HTML `hr` element with attribute `menudivider`.", "shortDescription": "MenuDivider class, extends `ui.models.appLayout.Component`."}, "ui.models.appLayout.Dialog": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "name": "children", "type": "any"}, {"description": "Styling to use on component. Default: `{}`.", "name": "style", "type": "object"}, {"description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes", "type": "object"}, {"description": "Events to listen to on component. Default: `{}`.", "name": "events", "type": "object"}], "return": {}, "longDescription": "Has similar properties to an HTML `div` element with attribute `Dialog`.\nShould have children `ui.models.appLayout.DialogTitle` and `ui.models.appLayout.DialogContent`.", "shortDescription": "Dialog class, extends `ui.models.appLayout.Component`."}, "ui.models.appLayout.Sidebar": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "name": "children", "type": "any"}, {"description": "Styling to use on component. Default: `{}`.", "name": "style", "type": "object"}, {"description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes", "type": "object"}, {"description": "Events to listen to on component. Default: `{}`.", "name": "events", "type": "object"}], "return": {}, "longDescription": "Has similar properties to an HTML `aside` element.", "shortDescription": "Sidebar class, extends `ui.models.appLayout.Sidebar`."}, "ui.models.appLayout.ButtonedFooter": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "name": "children", "type": "any"}, {"description": "Styling to use on component. Default: `{}`.", "name": "style", "type": "object"}, {"description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes", "type": "object"}, {"description": "Events to listen to on component. Default: `{}`.", "name": "events", "type": "object"}], "return": {}, "longDescription": "Has similar properties to an HTML `div` element with attribute `buttonedfooter`.", "shortDescription": "ButtonedFooter class, extends `ui.models.appLayout.Component`."}, "ui.models.appLayout.DialogTitle": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "name": "children", "type": "any"}, {"description": "Styling to use on component. Default: `{}`.", "name": "style", "type": "object"}, {"description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes", "type": "object"}, {"description": "Events to listen to on component. Default: `{}`.", "name": "events", "type": "object"}], "return": {}, "longDescription": "Has similar properties to an HTML `div` element with attribute `dialogtitle`.", "shortDescription": "DialogTitle class, extends `ui.models.appLayout.Component`."}, "ui.models.appLayout.MenuButton": {"params": [{"description": "Children or content to include in component. Default: `[]`.", "name": "children", "type": "any"}, {"description": "to make the button selected. Use `true` to enable. Default: `false`.", "name": "selected", "type": "Whether"}, {"description": "Styling to use on component. Default: `{}`.", "name": "style", "type": "object"}, {"description": "HTML attributes to use on component. Default: `{}`.", "name": "attributes", "type": "object"}, {"description": "Events to listen to on component. Default: `{}`.", "name": "events", "type": "object"}], "return": {}, "longDescription": "Has similar properties to an HTML `button` element with attribute `menubutton`.", "shortDescription": "MenuButton class, extends `ui.models.appLayout.Component`."}}