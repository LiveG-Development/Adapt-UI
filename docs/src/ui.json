{"ui.colour.RGBA": {"shortDescription": "RGBA class for use with colours.", "longDescription": "", "params": [{"type": "number", "name": "red", "description": "Amount of red to use in colour. Must be between 0 and 255 inclusive."}, {"type": "number", "name": "green", "description": "Amount of green to use in colour. Must be between 0 and 255 inclusive."}, {"type": "number", "name": "blue", "description": "Amount of blue to use in colour. Must be between 0 and 255 inclusive."}, {"type": "number", "name": "alpha", "description": "Amount of alpha transparency colour should have. Must be between 0 and 1 inclusive. Default: `1`."}], "return": {}}, "ui.refresh": {"shortDescription": "Regenerate the DOM to reflect the UI layout in `ui.screen`.", "longDescription": "", "params": [], "return": {}}, "ui.components.HTML": {"shortDescription": "HTML class, extends `ui.components.Component`.", "longDescription": "", "params": [{"type": "text", "name": "html", "description": "HTML contents to use."}], "return": {}}, "ui.components.Container": {"shortDescription": "Container class, extends `ui.components.Component`.", "longDescription": "Has similar properties to a HTML `div` element.", "params": [{"type": "any", "name": "children", "description": "Children or content to include in component. Default: `[]`."}, {"type": "object", "name": "style", "description": "Styling to use on component. Default: `{}`."}, {"type": "object", "name": "attributes", "description": "HTML attributes to use on component. Default: `{}`."}, {"type": "object", "name": "events", "description": "Events to listen to on component. Default: `{}`."}], "return": {}}, "ui.components.Component": {"shortDescription": "Blank component class.", "longDescription": "", "params": [{"type": "any", "name": "children", "description": "Children or content to include in component. Default: `[]`."}, {"type": "object", "name": "style", "description": "Styling to use on component. Default: `{}`."}, {"type": "object", "name": "attributes", "description": "HTML attributes to use on component. Default: `{}`."}, {"type": "object", "name": "events", "description": "Events to listen to on component. Default: `{}`."}], "return": {}}, "ui.components.Heading": {"shortDescription": "Heading class, extends `ui.components.Component`.", "longDescription": "Has similar properties to the HTML `h1`, `h2`, `h3`, `h4`, `h5` and `h6` elements.", "params": [{"type": "any", "name": "children", "description": "Children or content to include in component. Default: `[]`."}, {"type": "number", "name": "level", "description": "Level number to use for heading. Must be an integer between 1 and 6 inclusive. Default: `1`."}, {"type": "object", "name": "style", "description": "Styling to use on component. Default: `{}`."}, {"type": "object", "name": "attributes", "description": "HTML attributes to use on component. Default: `{}`."}, {"type": "object", "name": "events", "description": "Events to listen to on component. Default: `{}`."}], "return": {}}, "ui.components.Icon": {"shortDescription": "Icon class, extends `ui.components.Component`.", "longDescription": "Uses icons from from the Clarity icon set. An `i` element is generated.", "params": [{"type": "string", "name": "name", "description": "Name of icon to use."}], "return": {}}, "ui.components.Paragraph": {"shortDescription": "Paragraph class, extends `ui.components.Component`.", "longDescription": "Has similar properties to a HTML `p` element.", "params": [{"type": "any", "name": "children", "description": "Children or content to include in component. Default: `[]`."}, {"type": "object", "name": "style", "description": "Styling to use on component. Default: `{}`."}, {"type": "object", "name": "attributes", "description": "HTML attributes to use on component. Default: `{}`."}, {"type": "object", "name": "events", "description": "Events to listen to on component. Default: `{}`."}], "return": {}}, "ui.components.Text": {"shortDescription": "Text class, extends `ui.components.Component`.", "longDescription": "", "params": [{"type": "string", "name": "text", "description": "Text to use."}], "return": {}}, "ui.components.Component( ... ).generateHTML": {"shortDescription": "Generate HTML contents for component.", "longDescription": "", "params": [], "return": {"type": "string", "description": "HTML contents of component."}}, "ui.components.Component( ... ).generateDOMElement": {"shortDescription": "Generate DOM element for component.", "longDescription": "", "params": [], "return": {"type": "object", "description": "Dictionary of available functions and values for generated DOM element."}}, "ui.events.loaded": {"shortDescription": "Call callback function when main UI container has loaded.", "longDescription": "", "params": [{"type": "function", "name": "callback", "description": "Callback function to call when main UI container has loaded."}], "return": {}}}